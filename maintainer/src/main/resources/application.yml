micronaut:
  application:
    name: maintainer
  server:
    port: 8081
  security:
    authentication: bearer
    oauth2:
      clients:
        keycloak:
          client-id: '${OAUTH_CLIENT_ID:backend}'
          client-secret: '${OAUTH_CLIENT_SECRET:9r3Xb1B54at8MEvtMfGN798GPesTU8oG}'
          grant-type: 'client_credentials'
          authorization:
            url: '${OAUTH_AUTHORIZATION_URL:http://localhost:8080/realms/jics/protocol/openid-connect/auth}'
          token:
            url: '${OAUTH_TOKEN_URL:http://localhost:8080/realms/jics/protocol/openid-connect/token}'
            auth-method: 'client_secret_post'
    token:
      jwt:
        signatures:
          jwks:
            keycloak:
              url: '${OAUTH_JWKS:`http://localhost:8080/realms/jics/protocol/openid-connect/certs`}'

r2dbc:
  datasources:
    default:
      schema-generate: CREATE_DROP
      dialect: ${R2DBC_DIALECT:POSTGRES}
      url: ${R2DBC_URL:r2dbc:postgresql://localhost:5432/postgres}
      username: keycloak
      password: password
netty:
  default:
    allocator:
      max-order: 3
